<?xml version="1.0"?>
<doc>
<assembly>
<name>
ketabkhane
</name>
</assembly>
<members>
<member name="T:ketabkhane.bankDataSet.t_bookDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:ketabkhane.bankDataSet.t_memberDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:ketabkhane.bankDataSet.t_amanatDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:ketabkhane.bankDataSet.t_setDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:ketabkhane.bankDataSet.t_bookRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:ketabkhane.bankDataSet.t_memberRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:ketabkhane.bankDataSet.t_amanatRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:ketabkhane.bankDataSet.t_setRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:ketabkhane.bankDataSet.t_bookRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:ketabkhane.bankDataSet.t_memberRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:ketabkhane.bankDataSet.t_amanatRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:ketabkhane.bankDataSet.t_setRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:ketabkhane.bankDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:ketabkhane.bankDataSetTableAdapters.t_bookTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:ketabkhane.bankDataSetTableAdapters.t_memberTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:ketabkhane.bankDataSetTableAdapters.t_amanatTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:ketabkhane.bankDataSetTableAdapters.t_setTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="M:ketabkhane.bankDataSetTableAdapters.TableAdapterManager.UpdateUpdatedRows(ketabkhane.bankDataSet,System.Collections.Generic.List{System.Data.DataRow},System.Collections.Generic.List{System.Data.DataRow})">
	<summary>
Update rows in top-down order.
</summary>
</member><member name="M:ketabkhane.bankDataSetTableAdapters.TableAdapterManager.UpdateInsertedRows(ketabkhane.bankDataSet,System.Collections.Generic.List{System.Data.DataRow})">
	<summary>
Insert rows in top-down order.
</summary>
</member><member name="M:ketabkhane.bankDataSetTableAdapters.TableAdapterManager.UpdateDeletedRows(ketabkhane.bankDataSet,System.Collections.Generic.List{System.Data.DataRow})">
	<summary>
Delete rows in bottom-up order.
</summary>
</member><member name="M:ketabkhane.bankDataSetTableAdapters.TableAdapterManager.GetRealUpdatedRows(System.Data.DataRow[],System.Collections.Generic.List{System.Data.DataRow})">
	<summary>
Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
</summary>
</member><member name="M:ketabkhane.bankDataSetTableAdapters.TableAdapterManager.UpdateAll(ketabkhane.bankDataSet)">
	<summary>
Update all changes to the dataset.
</summary>
</member><member name="T:ketabkhane.bankDataSetTableAdapters.TableAdapterManager.UpdateOrderOption">
	<summary>
Update Order Option
</summary>
</member><member name="T:ketabkhane.bankDataSetTableAdapters.TableAdapterManager.SelfReferenceComparer">
	<summary>
Used to sort self-referenced table's rows
</summary>
</member><member name="T:ketabkhane.bankDataSetTableAdapters.TableAdapterManager">
	<summary>
TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
</summary>
</member>
</members>
</doc>